version: '3.9'
services:
  mongo:
    container_name: mongo
    hostname: ${host}
    image: mongo:${version}
    labels:
      - 'custom.project=mongo'
      - 'custom.service=mongo'
    ports:
      - '${port}:27017'
    volumes:
      - '${home}/db:/data/db'
      - '${home}/log:/var/log'
    healthcheck:
      test: >
        test $$(echo "rs.status().ok || rs.secondaryOk() || rs.initiate({ _id: 'rs0', members: [{ _id: 0, host: 'mongo:${port}' }] }).ok" | mongo --quiet) -eq 1
      interval: 10s
      start_period: 30s
    command: --wiredTigerJournalCompressor zstd --oplogMinRetentionHours 1.5 --replSet rs0 --bind_ip_all
    #command: --wiredTigerJournalCompressor zstd --oplogMinRetentionHours 1.5 --logpath /var/log/mongodb/mongod.log --replSet rs0 --bind_ip_all
    restart: on-failure

  # mongo-ui:
  #   container_name: mongo-ui
  #   hostname: mongo-ui
  #   image: mongo-express:latest
  #   labels:
  #     - "custom.project=mongo"
  #     - "custom.service=ui"
  #   depends_on:
  #     - mongo
  #   links:
  #     - mongo
  #   environment:
  #     VCAP_APP_PORT: 8093
  #   ports:
  #     - "8093:8093"
  #   restart: on-failure
